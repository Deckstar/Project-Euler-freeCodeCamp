/**
Accessed on 1 January 2020 : https://www.freecodecamp.org/learn/coding-interview-prep/project-euler/problem-44-pentagon-numbers

----------------------------------------------------------------------------------------
Project Euler: Problem 44: Pentagon numbers
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
----------------------------------------------------------------------------------------
**/

function isPentagonal(num){
    // the inverse function of Pn is 1/6(1 +/- sqrt(24n + 1)). Since we're only considering positive n's, we can restrict our range to the positive range.
    let inversedNum = 1/6 * (1 + Math.sqrt(24 * num + 1))

    // if we perform our inverse pentagonal function on the number, do we get an integer? If yes, then it's pentagonal.
    let pentagonalness = inversedNum == parseInt(inversedNum)

    return pentagonalness
}

function pentagonNumbers() {
  
    let i = 2;
    
    // since the pentagonal is an exponential function, the difference between values is going to increase a lot as we increase n.
    // We can assume that the first pentagonal difference we find is going to be the smallest one.
    let found = false;

    while (!found) {
        for (let j = i - 1; j>0; j--){
            let pi = i*(3*i - 1)/2;
            let pj = j*(3*j - 1)/2;

            // we need the sum and the difference to be pentagonal. If it is, we return the difference.
            if (isPentagonal(pi - pj) && isPentagonal(pi + pj)){
                console.log(`At i=${i}, j=${j}, found pentagonal difference ${pi - pj}`)
                return pi - pj
            }
        }
        // let's set a limit to this so we're not too insane with the while loop
        if (i>10000){
            console.log("Couldn't find a pentagonal difference, sorry!")
            return
        }
        i++
    }
}

pentagonNumbers(); // 5482660
